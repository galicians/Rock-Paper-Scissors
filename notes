frecuent errors:
if statements , = instead of ==
missing ( in rspec after an expect, forgueting the def, do, and the {} in an exception
expecting a symbol from rules.keys, but gives back an array


pending: sintax to style readme files in github

question & doubts:

https://github.com/cucumber/cucumber/wiki/RSpec-Expectations

findings:
Cucumber is a tool that implements a Behaviour Driven Design (BDD) workflow. executable specifications from stakeholders
Test environments such as Capybara
Application frameworks such as Sinatra
gems such as cucumber-sinatra.
Using Cucumber exclusively to emulate a keyboard and a mouse is possible, but itâ€™s not what it was designed for.
 set :views, Proc.new { File.join(root, "..","views") }
 enable :sessions



Feature: objective
In order
should

Scenario: objective
given(scenario steps)
and
and
then

1. create gemfile
2. run bundle
3. cucumber-sinatra init --app  Game lib/game.rb
4. First scenario of our first feature (features/starting_a_game.feature)

Feature: Joining the game
	In order to play
	As a player
	I want to play against another player

	Scenario: Joining a game as the first player
		Given I register to Battleships
		Then I should see a waiting page

	Scenario: Joining when there is a player in the waiting list
	Given there is a player waiting
	When I register to Battleships
	Then I should see the button  to "Place my ships"



##########################<%=   Cucumber    %>##########################

For Cucumber features the key words used here are Feature, Scenario, Given, When, Then, and And. 

 The clauses ( steps ) that make up a Scenario each begin with one of: Given, When, Then, And 

 They are the steps that Cucumber will report as passing, failing or pending based on the results of the corresponding step matchers in the step_definitions.rb files.

Cucumber documentation:
https://github.com/cucumber/cucumber/wiki/A-Table-Of-Content

Short blog article on how write cukes for cucumber:
how to write cukes for cucumber: http://www.elabs.se/blog/15-you-re-cuking-it-wrong

Article on how to write stories:
http://blog.josephwilk.net/ruby/telling-a-good-story-rspec-stories-from-the-trenches.html


A feature can be conceptualized as an indivisible unit of functionality embedded in the project to which it belongs. 

good step definition has the following attributes:

The matcher is short.
The matcher handles both positive and negative (true and false) conditions.
The matcher has at most two value parameters
The parameter variables are clearly named
The body is less than ten lines of code
The body does not call other steps
My template for a step definition presently looks like this:


When /statement identifier( not)? expectation "([^\"]+)"/i do |boolean, value|
  actual = expectation( value )
  expected = !boolean
  message = "expectation failed for #{value}" 
  assert( actual == expected, message )
end


how to test jekyll with cucumber: https://github.com/jekyll/jekyll/blob/master/features/step_definitions/jekyll_steps.rb
